{"version":3,"sources":["App.styled.jsx","Title/Title.jsx","Components/Contacts/Form/contactForm.styled.jsx","services/Api.js","redux/operations.js","redux/selectors.js","redux/actions.js","Components/Contacts/Form/Form.jsx","Components/Contacts/List/contactList.styled.jsx","Components/Contacts/List/List.jsx","Components/Filter/Filter.jsx","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["Container","styled","div","SectionTitle","h2","Title","title","Form","Label","Input","Button","fetchContacts","a","axios","get","data","addContact","contact","post","deleteContact","id","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","Api","contacts","message","getContacts","state","items","getIsLoading","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","changeFilter","createAction","ContactForm","dispatch","useDispatch","useSelector","selectors","formik","useFormik","initialValues","number","validationSchema","Yup","matches","notOneOf","map","required","onSubmit","values","setSubmitting","resetForm","operations","handleSubmit","handleChange","isSubmitting","touched","errors","type","onChange","value","disabled","ListContainer","ListItem","ContactList","useEffect","onClick","Filter","e","actions","target","App","createReducer","fulfilled","action","payload","isLoading","pending","rejected","error","combineReducers","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2147cd6f.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 500px;\n  // color: #ab8116;\n  background: #e3da8a;\n  box-shadow: 0px 5px 8px #785c14;\n  padding: 30px;\n  border-radius: 4px;\n  margin: 20px auto;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-bottom: 25px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #8a2154;\n  color: #f7eed7;\n  border-radius: 2px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SectionTitle } from '../App.styled';\n\nfunction Title({ title }) {\n  return <SectionTitle>{title}</SectionTitle>;\n}\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import styled from '@emotion/styled/macro';\n\nexport const Form = styled.form``;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  max-width: 400px;\n  margin-bottom: 25px;\n`;\n\nexport const Input = styled.input`\n  width: 440px;\n  border: 1px solid lightblue;\n  border-radius: 4px;\n  font-size: 20px;\n  &:focus {\n    outline: none;\n    border: 1px solid #8a2154;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 25px auto;\n  min-width: 200px;\n  padding: 2px 32px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  border-style: none;\n  cursor: pointer;\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 1.88;\n  letter-spacing: 0.06em;\n  color: #ffffff;\n  background-color: #cf2d7b;\n\n  & svg {\n    height: 18px;\n    width: 18px;\n    margin-right: 10px;\n  }\n`;\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61156ec88f38520017a384ea.mockapi.io';\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(`/contacts`);\r\n  return data;\r\n}\r\n\r\nexport async function addContact(contact) {\r\nconst { data } = await axios.post(`/contacts`, contact);\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(id) {\r\n  await axios.delete(`/contacts/${id}`);\r\n  return id;\r\n}","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as Api from '../services/Api';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n    \"contacts/getContacts\", async (_, { rejectWithValue }) => {\r\n    try {\r\n        const contacts = await Api.fetchContacts();\r\n        return contacts;\r\n    } catch (error) {\r\n        return rejectWithValue(error);\r\n    }\r\n}\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n    \"contacts/addContact\", async (contact, { rejectWithValue }) => {\r\n    try {\r\n        const data = await Api.addContact(contact);\r\n        return data;\r\n    } catch (error) {\r\n        return rejectWithValue(error.message);\r\n    }\r\n    \r\n});\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n    \"contacts/deleteContact\", async (id, { rejectWithValue }) => {\r\n        try {\r\n            await Api.deleteContact(id);\r\n            return id;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n});\r\n\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getIsLoading = (state) => state.contacts.getIsLoading;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector([getContacts, getFilter],\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n    })\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction(\"phoneBook/changeFilter\");\r\n\r\n// import { createAction } from '@reduxjs/toolkit';\r\n// import { nanoid } from \"nanoid\";\r\n\r\n\r\n// const contactsActions = {\r\n//   addContact: createAction(\"phoneBook/addContact\", (name, number) => ({\r\n//     payload: {\r\n//       id: nanoid(5),\r\n//       name,\r\n//       number,\r\n//     },\r\n//   })),\r\n//   deleteContact: createAction(\"phoneBook/deleteContact\"),\r\n//   changeFilter: createAction(\"phoneBook/changeFilter\"),\r\n\r\n// };\r\n\r\n// export default contactsActions;\r\n\r\n// const addContact = createAction(\"phoneBook/addContact\", (name, number) => {    \r\n//     return {\r\n//         payload: {\r\n//         id: nanoid(5),\r\n//         name,\r\n//         number,\r\n//     }\r\n//     }\r\n// } )\r\n\r\n// const deleteContact = createAction(\"phoneBook/deleteContact\");\r\n// const changeFilter = createAction(\"phoneBook/changeFilter\");\r\n\r\n// export default { addContact, deleteContact, changeFilter};","import React from 'react';\nimport { IoPersonAddOutline } from 'react-icons/io5';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Label, Input, Button } from './contactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { operations, selectors } from '../../../redux/index-export';\n\n function ContactForm() {\n\n   const dispatch = useDispatch();\n   const contacts = useSelector(selectors.getContacts)\n   \n   const formik = useFormik({\n     initialValues: {\n       name: '',\n       number: '',\n     },\n     validationSchema: Yup.object({\n       name: Yup.string()\n         .matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n           'Имя может состоять только из букв, апострофа, тире и пробелов.')\n        .notOneOf(contacts.map(contact => contact.name), \"Такой контакт уже существует\")\n         .required('Oбязательное поле'),\n       number: Yup.string()\n         .matches(/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/, 'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +')\n         .required('Oбязательное поле'),\n     }),\n     onSubmit: (values, { setSubmitting, resetForm }) => (\n       dispatch(operations.addContact({ name: values.name, number: values.number })),\n       setSubmitting(false),\n       \n         resetForm()\n     ),\n   });\n  \n   const { handleSubmit, handleChange, isSubmitting, values, touched, errors } = formik;\n   return (\n     <Form onSubmit={handleSubmit}>\n       <Label>Name\n       <Input\n         name=\"name\"\n         type=\"text\"\n         onChange={handleChange}\n         value={values.name}\n         />\n       {touched.name && errors.name ? (\n         <>{errors.name}</>\n         ) : null}\n         </Label>\n \n       <Label>Number\n       <Input\n         id=\"number\"\n         name=\"number\"\n         type=\"text\"\n         onChange={handleChange}\n         value={values.number}\n         />\n       {touched.number && errors.number ? (\n         <>{errors.number}</>\n       ) : null}\n       </Label>\n\n       <Button type=\"submit\" disabled={isSubmitting}>\n         <IoPersonAddOutline />\n         Add contact\n       </Button>\n     </Form>\n   );\n}\n \nexport default ContactForm;\n// ContactForm.propTypes = {\n//     onSubmit: PropTypes.func,\n// }\n\n\n\n// export default function ContactForm({ onSubmit }) {\n//   return (\n//     <Formik\n//       initialValues={{ name: '', number: '' }}\n//       validate={values => {\n//         const errors = {};\n//         if (!values.name) {\n//           errors.name = 'Обязательное поле';\n//         } else if (!values.number) {\n//           errors.number = 'Обязательное поле';\n//         } else if (\n//           !/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i.test(\n//             values.name,\n//           )\n//         ) {\n//           errors.name =\n//             'Имя может состоять только из букв, апострофа, тире и пробелов.';\n//         } else if (\n//           !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\n//             values.number,\n//           )\n//         ) {\n//           errors.number =\n//             'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +';\n//         }\n//         return errors;\n//       }}\n//       onSubmit={(values, { setSubmitting, resetForm }) => {\n//         onSubmit(values);\n//         setSubmitting(false);\n//         resetForm();\n//       }}\n//     >\n//       {({\n//         values,\n//         errors,\n//         touched,\n//         handleChange,\n//         handleSubmit,\n//         isSubmitting,\n//       }) => (\n//         <Form onSubmit={handleSubmit}>\n//           <Label>\n//             {' '}\n//             Name\n//             <Input\n//               type=\"text\"\n//               name=\"name\"\n//               onChange={handleChange}\n//               value={values.name}\n//             />\n//           </Label>\n//           {errors.name && touched.name && errors.name}\n//           <Label>\n//             {' '}\n//             Number\n//             <Input\n//               type=\"tel\"\n//               name=\"number\"\n//               onChange={handleChange}\n//               value={values.number}\n//             />\n//           </Label>\n//           {errors.number && touched.number && errors.number}\n//           <Button type=\"submit\" disabled={isSubmitting}>\n//             <IoPersonAddOutline />\n//             Add contact\n//           </Button>\n//         </Form>\n//       )}\n//     </Formik>\n//   );\n// }\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func,\n// };\n","import styled from '@emotion/styled/macro';\n\nexport const ListContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 25px;\n  max-width: 450px;\n  & svg {\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 200px;\n  padding: 2px 32px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  border-style: none;\n  cursor: pointer;\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 1.88;\n  letter-spacing: 0.06em;\n  color: #ffffff;\n  background-color: #ad7892;\n  & svg {\n    color: #fff;\n    height: 18px;\n    width: 18px;\n    margin-right: 10px;\n  }\n`;\n","import React,  {useEffect} from 'react';\nimport { FiPhone } from 'react-icons/fi';\nimport { AiFillDelete } from 'react-icons/ai';\nimport { ListContainer, ListItem, Button } from './contactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\n// import contactsActions from '../../../redux/actions';\nimport { operations, selectors } from '../../../redux/index-export';\n\n function ContactList(/*{ contacts, onDeleteContact }*/) {\n \n  // const getVisibleContact = (allContacts, filter) => {\n  //   const normalFilter = filter.toLowerCase();\n  //   return allContacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normalFilter)\n  //   );\n  // }\n  const dispatch = useDispatch();\n  \n   useEffect(() => {\n        dispatch(operations.fetchContacts());\n   }, [dispatch]);\n  \n  const contacts = useSelector(selectors.getVisibleContacts);\n  \n  return (\n    <ListContainer>\n      {contacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <FiPhone />\n          {name}: {number}\n          <Button onClick={() => dispatch(operations.deleteContact(id))}>\n            <AiFillDelete />\n            Delete\n          </Button>\n        </ListItem>\n      ))}\n    </ListContainer>\n  )\n }\n\nexport default ContactList;\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string,\n//       name: PropTypes.string,\n//       number: PropTypes.string,\n//     }),\n//   ),\n//   onDeleteContact: PropTypes.func,\n// };\n","import React from 'react';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\nimport { useSelector, useDispatch} from \"react-redux\";\n// import contactsActions from '../../redux/actions';\nimport { Label, Input } from '../Contacts/Form/contactForm.styled';\nimport { selectors, actions } from '../../redux/index-export';\n\nfunction Filter() {\nconst value = useSelector(selectors.getFilter);\n    const dispatch = useDispatch();\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={(e) => dispatch(actions.changeFilter(e.target.value))} />\n    </Label>\n  )\n}\n\nexport default Filter; \n// Filter.propTypes = {\n//   value: PropTypes.string,\n//   onChange: PropTypes.func,\n// };\n\n// const mapStateToProps = (state) => ({\n//     value: state.contacts.filter,\n// })\n\n// const mapDispatchToProps = dispatch => ({\n//     onChange: (e) => dispatch(contactsActions.changeFilter(e.target.value)),\n// })\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\nimport { Container } from './App.styled';\nimport Title from './Title/Title';\nimport ContactForm from './Components/Contacts/Form/Form';\nimport ContactList from './Components/Contacts/List/List';\nimport Filter from './Components/Filter/Filter';\n\n function App() {\n\n    return (\n      <Container>\n        <Title title={'Phonebook'} />\n        <ContactForm />\n        <Filter />\n        <Title title={'Contacts'} />\n        <ContactList />\n      </Container>\n    )\n}\n\nexport default App;","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\nimport { fetchContacts, addContact, deleteContact } from './operations';\r\n\r\nconst items = createReducer([], {\r\n    [fetchContacts.fulfilled]: (_, action) => action.payload,\r\n    [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\r\n    [deleteContact.fulfilled]: (state, { payload }) => state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n    [fetchContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => false,\r\n    [fetchContacts.rejected]: () => false,\r\n    [addContact.pending]: () => true,\r\n    [addContact.fulfilled]: () => false,\r\n    [addContact.rejected]: () => false,\r\n    [deleteContact.pending]: () => true,\r\n    [deleteContact.fulfilled]: () => false,\r\n    [deleteContact.rejected]: () => false,\r\n\r\n})\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContacts.pending]: null,\r\n    [fetchContacts.rejected]: (_, action) => action.payload,\r\n    [addContact.pending]: null,\r\n    [addContact.rejected]: (_, action) => action.payload,\r\n    [deleteContact.pending]: null,\r\n    [deleteContact.rejected]: (_,action) => action.payload,\r\n})\r\n\r\nconst filter = createReducer(\"\", {\r\n    [actions.changeFilter]: (_, action) => action.payload,\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    isLoading,\r\n    error,\r\n    filter,\r\n})\r\n\r\n// const initialContacts = [\r\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n//     { id: 'id-5', name: 'Olga Bezdetko', number: '596-91-79' },\r\n//   ]; \r\n  \r\n// const items = createReducer(initialContacts, {\r\n//     [actions.addContact]: (state, { payload }) => {\r\n//         if (state.find(contact => contact.name.toLowerCase() === payload.name.toLowerCase())) {\r\n//             alert(`${payload.name} is already in contacts`);\r\n//             return state;\r\n//         }\r\n//         return [payload, ...state]\r\n//     } ,\r\n        \r\n        \r\n//     [actions.deleteContact]: (state, {payload}) => state.filter(contact => contact.id !== payload),\r\n// })\r\n\r\n// const filter = createReducer(\"\", {\r\n//     [actions.changeFilter]: (_, action) => action.payload,\r\n// })\r\n\r\n// export default combineReducers({\r\n//     items,\r\n//     filter,\r\n// })","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactReducer from '../redux/reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport default store;\r\n\r\n\r\n// import { configureStore } from '@reduxjs/toolkit';\r\n// import { persistStore, persistReducer, FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER } from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\n// import contactReducer from '../redux/reducer';\r\n\r\n// const contactsPersistConfig = {\r\n//     key: 'contacts',\r\n//     storage,\r\n//     blacklist: ['filter'],\r\n// };\r\n\r\n//  const store = configureStore({\r\n//     reducer: {\r\n//     contacts: persistReducer(contactsPersistConfig, contactReducer),\r\n// },\r\n//     devTools: process.env.NODE_ENV !== 'production',\r\n//     middleware: (getDefaultMiddleware) =>\r\n//     getDefaultMiddleware({\r\n//       serializableCheck: {\r\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//       },\r\n//     }),\r\n// });\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// const contactStore = { store, persistor };\r\n\r\n// export default contactStore ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={contactStore.persistor}> */}\n        <App />\n        {/* </PersistGate> */}\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n\n"],"sourceRoot":""}